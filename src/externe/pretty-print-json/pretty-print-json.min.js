//! pretty-print-json v0.2.0 ~ github.com/center-key/pretty-print-json ~ MIT License
// Converti en ES5 sur https://babeljs.io/repl
"use strict"; function _typeof(e) { return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e })(e) } var prettyPrintJson = { version: "0.2.0", toHtml: function (e, n) { var t, o = Object.assign({ indent: 3, quoteKeys: !1 }, n), r = JSON.stringify(e, null, o.indent); return (t = r, t.replace(/&/g, "&amp;").replace(/\\"/g, "&bsol;&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;")).replace(/^( *)("[^"]+": )?("[^"]*"|[\w.+-]*)?([{}[\],]*)?$/gm, function (e, n, t, r, l) { var u, s, y = { indent: n, key: t, value: r, end: l }, i = o.quoteKeys ? /(.*)(): / : /"([\w]+)": |(.*): /, p = y.indent || "", f = y.key && y.key.replace(i, "$1$2"); return p + (y.key ? "<span class=json-key>" + f + "</span>: " : "") + (y.value ? (u = y.value, s = /^"/.test(u) && "string", "<span class=json-" + ((["true", "false"].includes(u) ? "boolean" : "null" === u && "null") || s || "number") + ">" + u + "</span>") : "") + (y.end || "") }) } }; "object" === ("undefined" == typeof module ? "undefined" : _typeof(module)) && (module.exports = prettyPrintJson), "object" === ("undefined" == typeof window ? "undefined" : _typeof(window)) && (window.prettyPrintJson = prettyPrintJson);