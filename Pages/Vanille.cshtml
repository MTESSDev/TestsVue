@page
@model VanilleModel
@{
    ViewData["Title"] = "Demande d'aide financière de dernier recours";
    ViewData["masquerPremierEspaceurConteneurColonnes"] = true;
}

@section style{

    <link rel="stylesheet" href="./form/snow.min.css">
}

@section colonneGauche{

}

@section colonneDroite{
    <div id="form">
        <template>
        <formulate-form v-model="form" >
            <formulate-input
              name="name"
              label="What is your name?"
              validation="required"
                error-behavior="live"
            >
            </formulate-input>
            <formulate-input
              name="age"
              label="How old are you?"
              validation="required|number|max:120"
            ></formulate-input>

            <formulate-input type="group"
                            name="attendees"
                            :repeatable="true"
                            label="Who is going to attend?"
                            add-label="+ Add Attendee"
                            @@repeatable-added="testRepeatableAdded"
                            @@repeatable-removed="testRepeatableRemoved"                            
                            validation="required">

                <formulate-input name="name"
                                validation="required"
                                label="Attendee’s name">
                    </formulate-input>
                    <formulate-input type="email"
                                    name="email"
                                    validation="required|email"
                                    label="Attendee’s email">
                        </formulate-input>
            </formulate-input>

                        <formulate-input type="submit"
                                         label="Sign up"></formulate-input>
</formulate-form>
    </template>

    </div>
}

@section scripts{
    <script src="https://unpkg.com/vue"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="form/formulate.min.js"></script>
    <script src="form/locales.min.js"></script>

    <script>

    Vue.use(VueFormulate, {
        plugins: [this.VueFormulateI18n.fr],
        locale: 'fr',
        validationNameStrategy: ['validationName', 'label', 'name', 'type']
    });

    const App = {
        el: '#form',
        methods: {
            testRepeatableAdded() {
                //                console.log('repeatableAdded model')
                console.log('repeatableAdded')
            },
            testRepeatableRemoved() {
                console.log('repeatableRemoved')
            },
            failedValidation(data) {
                this.$el.setAttribute('data-submit', true)
                console.log('failedValidation')
                // console.log(data)
            },
            submitRawHandler(data) {
                // Le setTimeout est utilisé afin de s'assurer que le traitement de soumission de formulaire qui ajoute spinner et disable et bien terminé.

                setTimeout(function () {
                    terminerTraitementEnCoursSoumissionForm()
                }, 100)
            },
            submitHandler(data) {
                axios.post('/Privacy', data)
            },
            invalidMessage(fields) {
                const fieldNames = Object.keys(fields)
                const listOfNames = fieldNames.map(fieldName => fieldName.replace('_', ' '))
                return `Invalid fields: ${listOfNames}`
            }
        },
        data: {
            form: {},
            formErrors: [],
            inputErrors: {}
        },
       @*/* data: {
            values: {},
            schema: @Html.Raw(Model.Formulaire)
        },
        */*@
        mounted() {
            console.log('Application mounted.')
        }
    }

    window.addEventListener('load', () => {
        new Vue(App)
    })

    </script>
}